============= aorals2.finalproj transcript [test1] (2020-12-14 00:00:39.184542) =============
  module: species
    [import]: success  (1/1)
      [  input = SpeciesAnalysis(import_score('Species/1-001-B_zawang2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = set()  (2/2)
      [  input = SpeciesAnalysis(import_score('Species/1-001-C_zawang2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = set()  (2/2)
      [  input = SpeciesAnalysis(import_score('Species/1-005-A_hanzhiy2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #10: voice overlap',
'At #8: forbidden strong beat dissonance',
'At #8: too many large leaps',
'At #9: consecutive unisons',
'At #9: missing melodic cadence',
'At #9: too many consecutive intervals in same direction',
'At #9: voice overlap'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-005-D_hanzhiy2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = set()  (2/2)
      [  input = SpeciesAnalysis(import_score('Species/1-006-B_hanzhiy2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #3: direct fifths',
'At #4: missing reverse by step recovery',
'At #5: dissonant melodic interval',
'At #5: too many large leaps',
'At #6: too many consecutive leaps'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-006-C_hanzhiy2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #6: dissonant melodic interval',
'At #9: missing melodic cadence'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-007-B_davidx2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #3: too many consecutive leaps',
'At #9: too many consecutive intervals in same direction'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-007-C_davidx2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #4: too many consecutive intervals in same direction',
'At #5: direct fifths',
'At #6: consecutive fifths',
'At #8: dissonant melodic interval'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-008-B_davidx2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #8: forbidden strong beat dissonance',
'At #8: too many melodic unisons'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-008-C_davidx2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #1: consecutive fifths',
'At #3: missing reverse by step recovery',
'At #3: too many consecutive leaps',
'At #3: too many large leaps',
'At #4: missing reverse by step recovery',
'At #4: too many consecutive leaps',
'At #4: too many large leaps',
'At #5: forbidden strong beat dissonance',
'At #5: too many consecutive leaps',
'At #8: dissonant melodic interval',
'At #8: forbidden strong beat dissonance'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-010-B_weikeng2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #1: missing reverse by step recovery',
'At #3: too many consecutive leaps',
'At #5: dissonant melodic interval',
'At #5: missing reverse by step recovery',
'At #5: too many leaps of a fifth',
'At #6: too many consecutive intervals in same direction',
'At #7: too many consecutive intervals in same direction',
'At #8: dissonant melodic interval',
'At #8: too many large leaps'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-010-C_weikeng2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #6: dissonant melodic interval',
'At #6: too many consecutive leaps',
'At #9: direct octaves',
'At #9: missing melodic cadence'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-011-B_weikeng2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {'At #8: dissonant melodic interval'}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-011-C_weikeng2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #4: too many leaps of a sixth',
'At #5: forbidden strong beat dissonance'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-012-B_erf3.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {'At #1: forbidden starting pitch'}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-012-C_erf3.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #4: forbidden strong beat dissonance',
'At #7: missing reverse by step recovery',
'At #7: too many leaps of a sixth'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-013-B_erf3.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #6: too many consecutive intervals in same direction',
'At #7: too many consecutive intervals in same direction'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-013-C_erf3.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {'At #5: too many consecutive intervals in same direction'}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-018-B_ajyanez2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #2: consecutive fifths',
'At #4: forbidden strong beat dissonance',
'At #5: forbidden strong beat dissonance',
'At #6: forbidden strong beat dissonance',
'At #9: too many consecutive intervals in same direction'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-018-C_ajyanez2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #2: missing reverse by step recovery',
'At #3: forbidden strong beat dissonance',
'At #4: dissonant melodic interval',
'At #4: forbidden non-diatonic pitch',
'At #4: forbidden strong beat dissonance',
'At #4: too many leaps of a fifth',
'At #5: forbidden strong beat dissonance',
'At #6: forbidden non-diatonic pitch',
'At #8: forbidden non-diatonic pitch',
'At #9: missing melodic cadence'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-019-A_ajyanez2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #4: too many consecutive intervals in same direction',
'At #4: voice crossing',
'At #4: voice overlap',
'At #5: voice crossing',
'At #5: voice overlap',
'At #6: too many consecutive leaps',
'At #6: voice crossing',
'At #6: voice overlap',
'At #8: too many consecutive intervals in same direction',
'At #9: too many consecutive intervals in same direction'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-019-D_ajyanez2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {'At #5: too many consecutive intervals in same direction'}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-022-B_mamn2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {'At #6: too many melodic unisons'}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-022-C_mamn2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {'At #6: too many consecutive intervals in same direction'}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-030-B_cjrosas2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {'At #3: direct fifths'}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-030-C_cjrosas2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #2: consecutive fifths',
'At #9: missing melodic cadence'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-030_B_chchang6.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {'At #3: direct fifths'}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-030_C_chchang6.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #2: consecutive fifths',
'At #9: missing melodic cadence'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-031-B_cjrosas2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #4: dissonant melodic interval',
'At #9: too many consecutive intervals in same direction'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-031-C_cjrosas2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {'At #6: too many consecutive intervals in same direction'}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-031_B_chchang6.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #4: dissonant melodic interval',
'At #9: too many consecutive intervals in same direction'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-031_C_chchang6.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {'At #6: too many consecutive intervals in same direction'}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-034-A_caleqw2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {'At #6: too many melodic unisons'}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-034-B_caleqw2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {'At #3: direct fifths'}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-034-C_caleqw2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {'At #5: too many consecutive intervals in same direction'}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-035-B_caleqw2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #5: forbidden strong beat dissonance',
'At #6: forbidden strong beat dissonance',
'At #9: too many consecutive intervals in same direction'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-035-C_caleqw2.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #3: missing reverse by step recovery',
'At #3: too many leaps of a sixth',
'At #7: too many consecutive leaps',
'At #8: too many consecutive intervals in same direction'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-036-B_sz18.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = set()  (2/2)
      [  input = SpeciesAnalysis(import_score('Species/1-036-C_sz18.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #6: dissonant melodic interval',
'At #8: dissonant melodic interval'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-037-A_sz18.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = {
'At #2: consecutive fifths',
'At #3: consecutive fifths',
'At #4: consecutive fifths',
'At #5: consecutive fifths'
}  (0/2)
      [  input = SpeciesAnalysis(import_score('Species/1-037-D_sz18.musicxml'), 1).submit_to_grading()  ]  your_output = set()  desired_output = set()  (2/2)
Total raw score: (11/83)

----------------------
Base score (if you do nothing but just turn in the starter code): 11
Extra credit (if applicable): 0
Adjusted score (Final): 0/72

