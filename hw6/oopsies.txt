      [  input = Interval('o1')  ]  your_output = <Interval: o1 [0, 4, 0, 1]>  desired_output = $exception$  (0/2)
      [  input = Interval('oo2')  ]  your_output = <Interval: oo2 [1, 3, 0, 1]>  desired_output = $exception$  (0/2)
      [  input = Interval('oooo3')  ]  your_output = <Interval: oooo3 [2, 1, 0, 1]>  desired_output = $exception$  (0/2)
      [  input = Interval('ooooo4')  ]  your_output = <Interval: ooooo4 [3, 0, 0, 1]>  desired_output = $exception$  (0/2)
      [  input = Interval('+++++5')  ]  your_output = <Interval: +++++5 [4, 12, 0, 1]>  desired_output = $exception$  (0/2)
      [  input = Interval([0, 1, 0, 1])  ]  your_output = <Interval: oooo1 [0, 1, 0, 1]>  desired_output = $exception$  (0/2)
      [  input = Interval([0, 2, 0, 1])  ]  your_output = <Interval: ooo1 [0, 2, 0, 1]>  desired_output = $exception$  (0/2)
      [  input = Interval([0, 3, 0, 1])  ]  your_output = <Interval: oo1 [0, 3, 0, 1]>  desired_output = $exception$  (0/2)
      [  input = Interval([0, 4, 0, 1])  ]  your_output = <Interval: o1 [0, 4, 0, 1]>  desired_output = $exception$  (0/2)
      [  input = Interval([5, 6, 10, 1])  ]  your_output = <Interval: P6 [5, 6, 10, 1]>  desired_output = $exception$  (0/2)

      [  input = Interval(Pitch('E3'), Pitch('F4'))  ]  your_output = <Interval: m2 [1, 5, 0, 1]>  desired_output = <Interval: m9 [1, 5, 1, 1]>  (0/2)
      [  input = Interval(Pitch('D##4'), Pitch('Ebb3'))  ]  your_output = <Interval: -ooo2 [1, 2, 0, -1]>  desired_output = <Interval: -+++7 [6, 10, 0, -1]>  (0/2)
      [  input = Interval(Pitch('B1'), Pitch('F8'))  ]  your_output = <Interval: o5 [4, 4, 6, 1]>  desired_output = <Interval: o47 [4, 4, 6, 1]>  (0/2)
      [  input = Interval(Pitch('E9'), Pitch('C00'))  ]  your_output = <Interval: -m6 [5, 5, 9, -1]>  desired_output = <Interval: -M73 [2, 7, 10, -1]>  (0/2)
      [  input = Interval(Pitch('C##4'), Pitch('Cbb4'))  ]  your_output = <Interval: -oooo1 [0, 1, 0, -1]>  desired_output = <Interval: -++++1 [0, 11, 0, -1]>  (0/2)
      [  input = Interval(Pitch('Bbb4'), Pitch('F##4'))  ]  your_output = <Interval: -++5 [4, 9, 0, -1]>  desired_output = <Interval: -ooo4 [3, 2, 0, -1]>  (0/2)
      [  input = Interval(Pitch('B##4'), Pitch('Fbb4'))  ]  your_output = <Interval: -ooooo5 [4, 0, 0, -1]>  desired_output = <Interval: -+++++4 [3, 12, 0, -1]>  (0/2)
      [  input = Interval(Pitch('B#3'), Pitch('Cb4'))  ]  your_output = <Interval: -oo2 [1, 3, 0, -1]>  desired_output = $exception$  (0/2)
      [  input = Interval(Pitch('B##3'), Pitch('Cbb4'))  ]  your_output = <Interval: -oooo2 [1, 1, 0, -1]>  desired_output = $exception$  (0/2)
      [  input = Interval(Pitch('B##3'), Pitch('Dbb4'))  ]  your_output = <Interval: -oooo3 [2, 1, 0, -1]>  desired_output = $exception$  (0/2)
      [  input = Interval(Pitch('Cs4'), Pitch('B3'))  ]  your_output = <Interval: -m7 [6, 5, 0, -1]>  desired_output = <Interval: -M2 [1, 7, 0, -1]>  (0/2)
      [  input = Interval(Pitch('E4'), Pitch('D4'))  ]  your_output = <Interval: -m7 [6, 5, 0, -1]>  desired_output = <Interval: -M2 [1, 7, 0, -1]>  (0/2)
      [  input = Interval(Pitch('E4'), Pitch('D#4'))  ]  your_output = <Interval: -M7 [6, 7, 0, -1]>  desired_output = <Interval: -m2 [1, 5, 0, -1]>  (0/2)
      [  input = Interval(Pitch('Cs4'), Pitch('B3'))  ]  your_output = <Interval: -m7 [6, 5, 0, -1]>  desired_output = <Interval: -M2 [1, 7, 0, -1]>  (0/2)
      [  input = Interval(Pitch('Cs4'), Pitch('B2'))  ]  your_output = <Interval: -m7 [6, 5, 1, -1]>  desired_output = <Interval: -M9 [1, 7, 1, -1]>  (0/2)
      [  input = Interval(Pitch('Cs4'), Pitch('B5'))  ]  your_output = <Interval: m7 [6, 5, 0, 1]>  desired_output = <Interval: m14 [6, 5, 1, 1]>  (0/2)
      [  input = Interval(Pitch('Bb5'), Pitch('Cs4'))  ]  your_output = <Interval: -+2 [1, 8, 0, -1]>  desired_output = <Interval: -o14 [6, 4, 1, -1]>  (0/2)
      [  input = Interval(Pitch('B3'), Pitch('Bb3'))  ]  your_output = <Interval: -o1 [0, 4, 0, -1]>  desired_output = <Interval: -+1 [0, 8, 0, -1]>  (0/2)
      [  input = Interval(Pitch('Eb4'), Pitch('D#4'))  ]  your_output = <Interval: +7 [6, 8, 0, 1]>  desired_output = <Interval: -o2 [1, 4, 0, -1]>  (0/2)
      [  input = Interval(Pitch('B3'), Pitch('Bb3'))  ]  your_output = <Interval: -o1 [0, 4, 0, -1]>  desired_output = <Interval: -+1 [0, 8, 0, -1]>  (0/2)
      [  input = Interval(Pitch('Eb4'), Pitch('D#4'))  ]  your_output = <Interval: +7 [6, 8, 0, 1]>  desired_output = <Interval: -o2 [1, 4, 0, -1]>  (0/2)
      [  input = Interval(Pitch('Cbb4'), Pitch('C##6'))  ]  your_output = <Interval: ++++1 [0, 11, 1, 1]>  desired_output = <Interval: ++++15 [7, 11, 1, 1]>  (0/2)
      [  input = Interval(Pitch('C#5'), Pitch('C4'))  ]  your_output = <Interval: -o8 [7, 4, 0, -1]>  desired_output = <Interval: -+8 [7, 8, 0, -1]>  (0/2)
      [  input = Interval(Pitch('C##5'), Pitch('C4'))  ]  your_output = <Interval: -oo8 [7, 3, 0, -1]>  desired_output = <Interval: -++8 [7, 9, 0, -1]>  (0/2)
      [  input = Interval(Pitch('C##5'), Pitch('Cb4'))  ]  your_output = <Interval: -ooo8 [7, 2, 0, -1]>  desired_output = <Interval: -+++8 [7, 10, 0, -1]>  (0/2)
      [  input = Interval(Pitch('C##5'), Pitch('Cbb4'))  ]  your_output = <Interval: -oooo8 [7, 1, 0, -1]>  desired_output = <Interval: -++++8 [7, 11, 0, -1]>  (0/2)
      [  input = Interval(Pitch('C##5'), Pitch('Cbb3'))  ]  your_output = <Interval: -oooo1 [0, 1, 1, -1]>  desired_output = <Interval: -++++15 [7, 11, 1, -1]>  (0/2)
      [  input = Interval(Pitch('F4'), Pitch('B4'))  ]  your_output = <Interval: o5 [4, 4, 0, 1]>  desired_output = <Interval: +4 [3, 8, 0, 1]>  (0/2)
      [  input = Interval(Pitch('F4'), Pitch('B#4'))  ]  your_output = $exception$  desired_output = <Interval: ++4 [3, 9, 0, 1]>  (0/2)
      [  input = Interval(Pitch('F4'), Pitch('B##4'))  ]  your_output = $exception$  desired_output = <Interval: +++4 [3, 10, 0, 1]>  (0/2)
      [  input = Interval(Pitch('Fb4'), Pitch('B##4'))  ]  your_output = <Interval: +5 [4, 8, 0, 1]>  desired_output = <Interval: ++++4 [3, 11, 0, 1]>  (0/2)
      [  input = Interval(Pitch('Fbb4'), Pitch('B##4'))  ]  your_output = <Interval: ++5 [4, 9, 0, 1]>  desired_output = <Interval: +++++4 [3, 12, 0, 1]>  (0/2)
      [  input = Interval(Pitch('B#4'), Pitch('Fbb4'))  ]  your_output = <Interval: -oooo5 [4, 1, 0, -1]>  desired_output = <Interval: -++++4 [3, 11, 0, -1]>  (0/2)
      [  input = Interval(Pitch('Fbb5'), Pitch('B##4'))  ]  your_output = <Interval: -++5 [4, 9, 0, -1]>  desired_output = <Interval: -ooooo5 [4, 0, 0, -1]>  (0/2)
      [  input = Interval(Pitch('C00'), Pitch('G9'))  ]  your_output = <Interval: P5 [4, 6, 9, 1]>  desired_output = <Interval: P75 [4, 6, 10, 1]>  (0/2)
      [  input = Interval(Pitch('C00'), Pitch('F##9'))  ]  your_output = <Interval: ++4 [3, 9, 9, 1]>  desired_output = <Interval: ++74 [3, 9, 10, 1]>  (0/2)
      [  input = Interval(Pitch('C00'), Pitch('Abb9'))  ]  your_output = $exception$  desired_output = <Interval: o76 [5, 4, 10, 1]>  (0/2)

      [  input = Interval('++15').full_name()  ]  your_output = doubly-augmented unison  desired_output = doubly-augmented octave  (0/2)

      [  input = Interval('++15').span_name()  ]  your_output = unison  desired_output = octave  (0/2)

      [  input = Interval('++13').matches(Interval('-++20'))  ]  your_output = True  desired_output = False  (0/2)
      [  input = Interval('d5').matches(Interval('+4'))  ]  your_output = True  desired_output = False  (0/2)

      [  input = Interval([0, 6, 1, 1]).to_list()  ]  your_output = [0, 6, 1, 1]  desired_output = [7, 6, 0, 1]  (0/2)
      [  input = Interval([0, 6, 2, 1]).to_list()  ]  your_output = [0, 6, 2, 1]  desired_output = [7, 6, 1, 1]  (0/2)

      [  input = Interval('+1').is_unison('A')  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('+1').is_unison('+')  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('+1').is_unison('o')  ]  your_output = $exception$  desired_output = False  (0/2)
      [  input = Interval('+2').is_second('A')  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('+2').is_second('+')  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('+2').is_second('m')  ]  your_output = $exception$  desired_output = False  (0/2)
      [  input = Interval('+3').is_third('A')  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('+3').is_third('+')  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('+3').is_third('++')  ]  your_output = $exception$  desired_output = False  (0/2)
      [  input = Interval('+4').is_fourth('A')  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('+4').is_fourth('+')  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('+4').is_fourth('oo')  ]  your_output = $exception$  desired_output = False  (0/2)
      [  input = Interval('+5').is_fifth('A')  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('+5').is_fifth('+')  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('+5').is_fifth('oo')  ]  your_output = $exception$  desired_output = False  (0/2)
      [  input = Interval('M6').is_sixth('M')  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('+6').is_sixth('+')  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('+6').is_sixth('oo')  ]  your_output = $exception$  desired_output = False  (0/2)
      [  input = Interval('m7').is_seventh('m')  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('+7').is_seventh('+')  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('+7').is_seventh('oo')  ]  your_output = $exception$  desired_output = False  (0/2)
      [  input = Interval('+++14').is_seventh()  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('+8').is_octave('A')  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('+8').is_octave('+')  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('+8').is_octave('P')  ]  your_output = $exception$  desired_output = False  (0/2)
      [  input = Interval('-m14').is_major()  ]  your_output = $exception$  desired_output = False  (0/2)
      [  input = Interval('-m14').is_minor()  ]  your_output = $exception$  desired_output = True  (0/2)
      [  input = Interval('m9').is_compound()  ]  your_output = False  desired_output = True  (0/2)
      [  input = Interval('o9').is_compound()  ]  your_output = False  desired_output = True  (0/2)
      [  input = Interval('oo9').is_compound()  ]  your_output = False  desired_output = True  (0/2)
      [  input = Interval('ooo9').is_compound()  ]  your_output = False  desired_output = True  (0/2)
      [  input = Interval('oooo9').is_compound()  ]  your_output = False  desired_output = True  (0/2)
      [  input = Interval('-m3').is_ascending()  ]  your_output = True  desired_output = False  (0/2)
      [  input = Interval('-+3').is_descending()  ]  your_output = False  desired_output = True  (0/2)
      [  input = Interval('+++++4').is_consonant()  ]  your_output = True  desired_output = False  (0/2)
      [  input = Interval('ooooo5').is_consonant()  ]  your_output = True  desired_output = False  (0/2)
      [  input = Interval('oo3').is_consonant()  ]  your_output = True  desired_output = False  (0/2)
      [  input = Interval('+6').is_consonant()  ]  your_output = True  desired_output = False  (0/2)
      [  input = Interval('+++++4').is_dissonant()  ]  your_output = False  desired_output = True  (0/2)
      [  input = Interval('ooooo5').is_dissonant()  ]  your_output = False  desired_output = True  (0/2)
      [  input = Interval('oo3').is_dissonant()  ]  your_output = False  desired_output = True  (0/2)
      [  input = Interval('+6').is_dissonant()  ]  your_output = False  desired_output = True  (0/2)

      [  input = Interval('P1').complemented()  ]  your_output = <Interval: -P8 [7, 6, 0, -1]>  desired_output = <Interval: P8 [7, 6, 0, 1]>  (0/2)
      [  input = Interval('+1').complemented()  ]  your_output = <Interval: -o8 [7, 4, 0, -1]>  desired_output = <Interval: o8 [7, 4, 0, 1]>  (0/2)
      [  input = Interval('+7').complemented()  ]  your_output = <Interval: -o2 [1, 4, 0, -1]>  desired_output = <Interval: o2 [1, 4, 0, 1]>  (0/2)
      [  input = Interval('m2').complemented()  ]  your_output = <Interval: -M7 [6, 7, 0, -1]>  desired_output = <Interval: M7 [6, 7, 0, 1]>  (0/2)
      [  input = Interval('m9').complemented()  ]  your_output = <Interval: -M7 [6, 7, 0, -1]>  desired_output = <Interval: M14 [6, 7, 1, 1]>  (0/2)
      [  input = Interval('P8').complemented()  ]  your_output = <Interval: -P1 [0, 6, 0, -1]>  desired_output = <Interval: P1 [0, 6, 0, 1]>  (0/2)
      [  input = Interval('+8').complemented()  ]  your_output = <Interval: -o1 [0, 4, 0, -1]>  desired_output = $exception$  (0/2)
      [  input = Interval('++7').complemented()  ]  your_output = <Interval: -oo2 [1, 3, 0, -1]>  desired_output = $exception$  (0/2)
      [  input = Interval('++8').complemented()  ]  your_output = <Interval: -oo1 [0, 3, 0, -1]>  desired_output = $exception$  (0/2)
      [  input = Interval('++++6').complemented()  ]  your_output = <Interval: -oooo3 [2, 1, 0, -1]>  desired_output = $exception$  (0/2)
      [  input = Interval('++6').complemented()  ]  your_output = <Interval: -oo3 [2, 3, 0, -1]>  desired_output = <Interval: oo3 [2, 3, 0, 1]>  (0/2)
      [  input = Interval('o8').complemented()  ]  your_output = <Interval: -+1 [0, 8, 0, -1]>  desired_output = <Interval: +1 [0, 8, 0, 1]>  (0/2)
      [  input = Interval('oo8').complemented()  ]  your_output = <Interval: -++1 [0, 9, 0, -1]>  desired_output = <Interval: ++1 [0, 9, 0, 1]>  (0/2)
      [  input = Interval('++15').complemented()  ]  your_output = <Interval: -oo8 [7, 3, 0, -1]>  desired_output = <Interval: oo8 [7, 3, 0, 1]>  (0/2)
      [  input = Interval('M3').complemented()  ]  your_output = <Interval: -m6 [5, 5, 0, -1]>  desired_output = <Interval: m6 [5, 5, 0, 1]>  (0/2)
      [  input = Interval('m73').complemented()  ]  your_output = <Interval: -M6 [5, 7, 0, -1]>  desired_output = $exception$  (0/2)
      [  input = Interval('m66').complemented()  ]  your_output = <Interval: -M6 [5, 7, 0, -1]>  desired_output = <Interval: M69 [5, 7, 9, 1]>  (0/2)
      [  input = Interval('++3').complemented()  ]  your_output = <Interval: -oo6 [5, 3, 0, -1]>  desired_output = <Interval: oo6 [5, 3, 0, 1]>  (0/2)
      [  input = Interval('oo3').complemented()  ]  your_output = <Interval: -++6 [5, 9, 0, -1]>  desired_output = <Interval: ++6 [5, 9, 0, 1]>  (0/2)
      [  input = Interval('P5').complemented()  ]  your_output = <Interval: -P4 [3, 6, 0, -1]>  desired_output = <Interval: P4 [3, 6, 0, 1]>  (0/2)
      [  input = Interval('-P5').complemented()  ]  your_output = <Interval: P4 [3, 6, 0, 1]>  desired_output = <Interval: -P4 [3, 6, 0, -1]>  (0/2)
      [  input = Interval('-M3').complemented()  ]  your_output = <Interval: m6 [5, 5, 0, 1]>  desired_output = <Interval: -m6 [5, 5, 0, -1]>  (0/2)
      [  input = Interval('-oo5').complemented()  ]  your_output = <Interval: ++4 [3, 9, 0, 1]>  desired_output = <Interval: -++4 [3, 9, 0, -1]>  (0/2)
      [  input = Interval('-ooo5').complemented()  ]  your_output = <Interval: +++4 [3, 10, 0, 1]>  desired_output = <Interval: -+++4 [3, 10, 0, -1]>  (0/2)
      [  input = Interval('-oooo5').complemented()  ]  your_output = <Interval: ++++4 [3, 11, 0, 1]>  desired_output = <Interval: -++++4 [3, 11, 0, -1]>  (0/2)
      [  input = Interval('-ooooo5').complemented()  ]  your_output = <Interval: +++++4 [3, 12, 0, 1]>  desired_output = <Interval: -+++++4 [3, 12, 0, -1]>  (0/2)
      [  input = Interval('ooooo12').complemented()  ]  your_output = <Interval: -+++++4 [3, 12, 0, -1]>  desired_output = <Interval: +++++11 [3, 12, 1, 1]>  (0/2)
      [  input = Interval('-+++++18').complemented()  ]  your_output = <Interval: ooooo5 [4, 0, 0, 1]>  desired_output = <Interval: -ooooo19 [4, 0, 2, -1]>  (0/2)

      [  input = Interval('o3').semitones()  ]  your_output = 3  desired_output = 2  (0/2)
      [  input = Interval('oo3').semitones()  ]  your_output = 2  desired_output = 1  (0/2)
      [  input = Interval('ooo3').semitones()  ]  your_output = 1  desired_output = 0  (0/2)
      [  input = Interval('o2').semitones()  ]  your_output = 1  desired_output = 0  (0/2)
      [  input = Interval('oooo9').semitones()  ]  your_output = -2  desired_output = 9  (0/2)
      [  input = Interval('ooo9').semitones()  ]  your_output = -1  desired_output = 10  (0/2)
      [  input = Interval('oo9').semitones()  ]  your_output = 0  desired_output = 11  (0/2)
      [  input = Interval('o9').semitones()  ]  your_output = 1  desired_output = 12  (0/2)
      [  input = Interval('m9').semitones()  ]  your_output = 1  desired_output = 13  (0/2)
      [  input = Interval('M9').semitones()  ]  your_output = 2  desired_output = 14  (0/2)
      [  input = Interval('+9').semitones()  ]  your_output = 3  desired_output = 15  (0/2)
      [  input = Interval('++9').semitones()  ]  your_output = 4  desired_output = 16  (0/2)
      [  input = Interval('+++9').semitones()  ]  your_output = 5  desired_output = 17  (0/2)
      [  input = Interval('++++9').semitones()  ]  your_output = 6  desired_output = 18  (0/2)

      [  input = Interval('M3').add(Interval('m3'))  ]  your_output = None  desired_output = <Interval: P5 [4, 6, 0, 1]>  (0/2)
      [  input = Interval('m3').add(Interval('M3'))  ]  your_output = None  desired_output = <Interval: P5 [4, 6, 0, 1]>  (0/2)
      [  input = Interval('m3').add(Interval('m3'))  ]  your_output = None  desired_output = <Interval: o5 [4, 4, 0, 1]>  (0/2)
      [  input = Interval('M3').add(Interval('M3'))  ]  your_output = None  desired_output = <Interval: +5 [4, 8, 0, 1]>  (0/2)
      [  input = Interval('P5').add(Interval('m3'))  ]  your_output = None  desired_output = <Interval: m7 [6, 5, 0, 1]>  (0/2)
      [  input = Interval('o5').add(Interval('m3'))  ]  your_output = None  desired_output = <Interval: o7 [6, 4, 0, 1]>  (0/2)
      [  input = Interval('M3').add(Interval('-m3'))  ]  your_output = None  desired_output = $exception$  (0/2)

      [  input = Interval('++5').transpose(Pitch('C#5'))  ]  your_output = <Pitch: A#5>  desired_output = $exception$  (0/2)
      [  input = Interval('oooo5').transpose(Pitch('C#5'))  ]  your_output = <Pitch: Fb5>  desired_output = $exception$  (0/2)
      [  input = Interval('-++++5').transpose(Pitch('C##5'))  ]  your_output = $exception$  desired_output = <Pitch: Fbb4>  (0/2)
      [  input = Interval('-+++5').transpose(Pitch('C##5'))  ]  your_output = $exception$  desired_output = <Pitch: Fb4>  (0/2)
      [  input = Interval('-++5').transpose(Pitch('C##5'))  ]  your_output = <Pitch: A##5>  desired_output = <Pitch: F4>  (0/2)
      [  input = Interval('-+5').transpose(Pitch('C##5'))  ]  your_output = <Pitch: A#5>  desired_output = <Pitch: F#4>  (0/2)
      [  input = Interval('-P5').transpose(Pitch('C##5'))  ]  your_output = <Pitch: G##5>  desired_output = <Pitch: F##4>  (0/2)
      [  input = Interval('-o5').transpose(Pitch('C##5'))  ]  your_output = <Pitch: G#5>  desired_output = $exception$  (0/2)
      [  input = Interval('A6').transpose(Pitch('g4'))  ]  your_output = <Pitch: E#4>  desired_output = <Pitch: E#5>  (0/2)
      [  input = Interval('M7').transpose(Pitch('B3'))  ]  your_output = <Pitch: A3>  desired_output = <Pitch: A#4>  (0/2)
      [  input = Interval('o2').transpose(Pitch('Ef3').pnum())  ]  your_output = None  desired_output = Pnum.Fff  (0/2)
      [  input = Interval('m2').transpose(Pitch('Ef3').pnum())  ]  your_output = None  desired_output = Pnum.Ff  (0/2)
      [  input = Interval('M2').transpose(Pitch('Ef3').pnum())  ]  your_output = None  desired_output = Pnum.F  (0/2)
      [  input = Interval('+2').transpose(Pitch('Ef3').pnum())  ]  your_output = None  desired_output = Pnum.Fs  (0/2)
      [  input = Interval('++2').transpose(Pitch('Ef3').pnum())  ]  your_output = None  desired_output = Pnum.Fss  (0/2)
      [  input = Interval('P1').transpose(Pitch('Ef3').pnum())  ]  your_output = None  desired_output = Pnum.Ef  (0/2)
      [  input = Interval('+1').transpose(Pitch('Ef3').pnum())  ]  your_output = None  desired_output = Pnum.E  (0/2)
      [  input = Interval('++1').transpose(Pitch('Ef3').pnum())  ]  your_output = None  desired_output = Pnum.Es  (0/2)
